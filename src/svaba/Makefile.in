# Makefile.in generated by automake 1.16.2 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2020 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = svaba$(EXEEXT)
subdir = src/svaba
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_svaba_OBJECTS = svaba-run_svaba.$(OBJEXT) \
	svaba-BreakPoint.$(OBJEXT) svaba-AlignedContig.$(OBJEXT) \
	svaba-AlignmentFragment.$(OBJEXT) \
	svaba-DiscordantCluster.$(OBJEXT) svaba-DBSnpFilter.$(OBJEXT) \
	svaba-PONFilter.$(OBJEXT) svaba-svabaUtils.$(OBJEXT) \
	svaba-svaba.$(OBJEXT) svaba-svabaAssemblerEngine.$(OBJEXT) \
	svaba-vcf.$(OBJEXT) svaba-DiscordantRealigner.$(OBJEXT) \
	svaba-svabaOverlapAlgorithm.$(OBJEXT) \
	svaba-svabaASQG.$(OBJEXT) svaba-svabaAssemble.$(OBJEXT) \
	svaba-KmerFilter.$(OBJEXT) svaba-svabaBamWalker.$(OBJEXT) \
	svaba-refilter.$(OBJEXT) svaba-LearnBamParams.$(OBJEXT) \
	svaba-STCoverage.$(OBJEXT) svaba-Histogram.$(OBJEXT) \
	svaba-BamStats.$(OBJEXT) svaba-svabaRead.$(OBJEXT) \
	svaba-svabaBxBamWalker.$(OBJEXT)
svaba_OBJECTS = $(am_svaba_OBJECTS)
svaba_DEPENDENCIES = $(top_builddir)/src/SGA/SGA/libsga.a \
	$(top_builddir)/src/SGA/StringGraph/libstringgraph.a \
	$(top_builddir)/src/SGA/Algorithm/libalgorithm.a \
	$(top_builddir)/src/SGA/SuffixTools/libsuffixtools.a \
	$(top_builddir)/src/SGA/Bigraph/libbigraph.a \
	$(top_builddir)/src/SGA/Util/libutil.a \
	$(top_builddir)/src/SGA/SQG/libsqg.a \
	$(top_builddir)/SeqLib/src/libseqlib.a \
	$(top_builddir)/SeqLib/bwa/libbwa.a \
	$(top_builddir)/SeqLib/htslib/libhts.a \
	$(top_builddir)/SeqLib/fermi-lite/libfml.a
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/svaba-AlignedContig.Po \
	./$(DEPDIR)/svaba-AlignmentFragment.Po \
	./$(DEPDIR)/svaba-BamStats.Po ./$(DEPDIR)/svaba-BreakPoint.Po \
	./$(DEPDIR)/svaba-DBSnpFilter.Po \
	./$(DEPDIR)/svaba-DiscordantCluster.Po \
	./$(DEPDIR)/svaba-DiscordantRealigner.Po \
	./$(DEPDIR)/svaba-Histogram.Po ./$(DEPDIR)/svaba-KmerFilter.Po \
	./$(DEPDIR)/svaba-LearnBamParams.Po \
	./$(DEPDIR)/svaba-PONFilter.Po ./$(DEPDIR)/svaba-STCoverage.Po \
	./$(DEPDIR)/svaba-refilter.Po ./$(DEPDIR)/svaba-run_svaba.Po \
	./$(DEPDIR)/svaba-svaba.Po ./$(DEPDIR)/svaba-svabaASQG.Po \
	./$(DEPDIR)/svaba-svabaAssemble.Po \
	./$(DEPDIR)/svaba-svabaAssemblerEngine.Po \
	./$(DEPDIR)/svaba-svabaBamWalker.Po \
	./$(DEPDIR)/svaba-svabaBxBamWalker.Po \
	./$(DEPDIR)/svaba-svabaOverlapAlgorithm.Po \
	./$(DEPDIR)/svaba-svabaRead.Po ./$(DEPDIR)/svaba-svabaUtils.Po \
	./$(DEPDIR)/svaba-vcf.Po
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(svaba_SOURCES)
DIST_SOURCES = $(svaba_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
svaba_CPPFLAGS = \
	-I$(top_srcdir)/src/SGA/Util \
	-I$(top_srcdir)/src/SGA/Bigraph \
	-I$(top_srcdir)/src/SGA/SuffixTools \
	-I$(top_srcdir)/src/SGA/StringGraph \
	-I$(top_srcdir)/src/SGA/Algorithm \
	-I$(top_srcdir)/src/SGA/SQG \
	-I$(top_srcdir)/src/SGA/SGA \
	-I$(top_srcdir)/SeqLib \
	-I$(top_srcdir)/SeqLib/htslib -Wno-sign-compare

svaba_LDADD = \
	$(top_builddir)/src/SGA/SGA/libsga.a \
	$(top_builddir)/src/SGA/StringGraph/libstringgraph.a \
	$(top_builddir)/src/SGA/Algorithm/libalgorithm.a \
	$(top_builddir)/src/SGA/SuffixTools/libsuffixtools.a \
	$(top_builddir)/src/SGA/Bigraph/libbigraph.a \
	$(top_builddir)/src/SGA/Util/libutil.a \
	$(top_builddir)/src/SGA/SQG/libsqg.a \
	$(top_builddir)/SeqLib/src/libseqlib.a \
	$(top_builddir)/SeqLib/bwa/libbwa.a \
	$(top_builddir)/SeqLib/htslib/libhts.a \
	$(top_builddir)/SeqLib/fermi-lite/libfml.a \
	-llzma -lbz2 -lz

svaba_SOURCES = run_svaba.cpp BreakPoint.cpp AlignedContig.cpp AlignmentFragment.cpp \
	 		DiscordantCluster.cpp DBSnpFilter.cpp PONFilter.cpp \
	 		svabaUtils.cpp svaba.cpp svabaAssemblerEngine.cpp vcf.cpp \
	 		DiscordantRealigner.cpp svabaOverlapAlgorithm.cpp svabaASQG.cpp \
	 		svabaAssemble.cpp KmerFilter.cpp svabaBamWalker.cpp \
	 		refilter.cpp LearnBamParams.cpp \
	 		STCoverage.cpp Histogram.cpp BamStats.cpp svabaRead.cpp \
	 		svabaBxBamWalker.cpp

all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/svaba/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/svaba/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

svaba$(EXEEXT): $(svaba_OBJECTS) $(svaba_DEPENDENCIES) $(EXTRA_svaba_DEPENDENCIES) 
	@rm -f svaba$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(svaba_OBJECTS) $(svaba_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-AlignedContig.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-AlignmentFragment.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-BamStats.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-BreakPoint.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-DBSnpFilter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-DiscordantCluster.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-DiscordantRealigner.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-Histogram.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-KmerFilter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-LearnBamParams.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-PONFilter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-STCoverage.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-refilter.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-run_svaba.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svaba.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaASQG.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaAssemble.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaAssemblerEngine.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaBamWalker.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaBxBamWalker.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaOverlapAlgorithm.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaRead.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-svabaUtils.Po@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/svaba-vcf.Po@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

svaba-run_svaba.o: run_svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-run_svaba.o -MD -MP -MF $(DEPDIR)/svaba-run_svaba.Tpo -c -o svaba-run_svaba.o `test -f 'run_svaba.cpp' || echo '$(srcdir)/'`run_svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-run_svaba.Tpo $(DEPDIR)/svaba-run_svaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='run_svaba.cpp' object='svaba-run_svaba.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-run_svaba.o `test -f 'run_svaba.cpp' || echo '$(srcdir)/'`run_svaba.cpp

svaba-run_svaba.obj: run_svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-run_svaba.obj -MD -MP -MF $(DEPDIR)/svaba-run_svaba.Tpo -c -o svaba-run_svaba.obj `if test -f 'run_svaba.cpp'; then $(CYGPATH_W) 'run_svaba.cpp'; else $(CYGPATH_W) '$(srcdir)/run_svaba.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-run_svaba.Tpo $(DEPDIR)/svaba-run_svaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='run_svaba.cpp' object='svaba-run_svaba.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-run_svaba.obj `if test -f 'run_svaba.cpp'; then $(CYGPATH_W) 'run_svaba.cpp'; else $(CYGPATH_W) '$(srcdir)/run_svaba.cpp'; fi`

svaba-BreakPoint.o: BreakPoint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-BreakPoint.o -MD -MP -MF $(DEPDIR)/svaba-BreakPoint.Tpo -c -o svaba-BreakPoint.o `test -f 'BreakPoint.cpp' || echo '$(srcdir)/'`BreakPoint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-BreakPoint.Tpo $(DEPDIR)/svaba-BreakPoint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BreakPoint.cpp' object='svaba-BreakPoint.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-BreakPoint.o `test -f 'BreakPoint.cpp' || echo '$(srcdir)/'`BreakPoint.cpp

svaba-BreakPoint.obj: BreakPoint.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-BreakPoint.obj -MD -MP -MF $(DEPDIR)/svaba-BreakPoint.Tpo -c -o svaba-BreakPoint.obj `if test -f 'BreakPoint.cpp'; then $(CYGPATH_W) 'BreakPoint.cpp'; else $(CYGPATH_W) '$(srcdir)/BreakPoint.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-BreakPoint.Tpo $(DEPDIR)/svaba-BreakPoint.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BreakPoint.cpp' object='svaba-BreakPoint.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-BreakPoint.obj `if test -f 'BreakPoint.cpp'; then $(CYGPATH_W) 'BreakPoint.cpp'; else $(CYGPATH_W) '$(srcdir)/BreakPoint.cpp'; fi`

svaba-AlignedContig.o: AlignedContig.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-AlignedContig.o -MD -MP -MF $(DEPDIR)/svaba-AlignedContig.Tpo -c -o svaba-AlignedContig.o `test -f 'AlignedContig.cpp' || echo '$(srcdir)/'`AlignedContig.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-AlignedContig.Tpo $(DEPDIR)/svaba-AlignedContig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlignedContig.cpp' object='svaba-AlignedContig.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-AlignedContig.o `test -f 'AlignedContig.cpp' || echo '$(srcdir)/'`AlignedContig.cpp

svaba-AlignedContig.obj: AlignedContig.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-AlignedContig.obj -MD -MP -MF $(DEPDIR)/svaba-AlignedContig.Tpo -c -o svaba-AlignedContig.obj `if test -f 'AlignedContig.cpp'; then $(CYGPATH_W) 'AlignedContig.cpp'; else $(CYGPATH_W) '$(srcdir)/AlignedContig.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-AlignedContig.Tpo $(DEPDIR)/svaba-AlignedContig.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlignedContig.cpp' object='svaba-AlignedContig.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-AlignedContig.obj `if test -f 'AlignedContig.cpp'; then $(CYGPATH_W) 'AlignedContig.cpp'; else $(CYGPATH_W) '$(srcdir)/AlignedContig.cpp'; fi`

svaba-AlignmentFragment.o: AlignmentFragment.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-AlignmentFragment.o -MD -MP -MF $(DEPDIR)/svaba-AlignmentFragment.Tpo -c -o svaba-AlignmentFragment.o `test -f 'AlignmentFragment.cpp' || echo '$(srcdir)/'`AlignmentFragment.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-AlignmentFragment.Tpo $(DEPDIR)/svaba-AlignmentFragment.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlignmentFragment.cpp' object='svaba-AlignmentFragment.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-AlignmentFragment.o `test -f 'AlignmentFragment.cpp' || echo '$(srcdir)/'`AlignmentFragment.cpp

svaba-AlignmentFragment.obj: AlignmentFragment.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-AlignmentFragment.obj -MD -MP -MF $(DEPDIR)/svaba-AlignmentFragment.Tpo -c -o svaba-AlignmentFragment.obj `if test -f 'AlignmentFragment.cpp'; then $(CYGPATH_W) 'AlignmentFragment.cpp'; else $(CYGPATH_W) '$(srcdir)/AlignmentFragment.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-AlignmentFragment.Tpo $(DEPDIR)/svaba-AlignmentFragment.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='AlignmentFragment.cpp' object='svaba-AlignmentFragment.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-AlignmentFragment.obj `if test -f 'AlignmentFragment.cpp'; then $(CYGPATH_W) 'AlignmentFragment.cpp'; else $(CYGPATH_W) '$(srcdir)/AlignmentFragment.cpp'; fi`

svaba-DiscordantCluster.o: DiscordantCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DiscordantCluster.o -MD -MP -MF $(DEPDIR)/svaba-DiscordantCluster.Tpo -c -o svaba-DiscordantCluster.o `test -f 'DiscordantCluster.cpp' || echo '$(srcdir)/'`DiscordantCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DiscordantCluster.Tpo $(DEPDIR)/svaba-DiscordantCluster.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiscordantCluster.cpp' object='svaba-DiscordantCluster.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DiscordantCluster.o `test -f 'DiscordantCluster.cpp' || echo '$(srcdir)/'`DiscordantCluster.cpp

svaba-DiscordantCluster.obj: DiscordantCluster.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DiscordantCluster.obj -MD -MP -MF $(DEPDIR)/svaba-DiscordantCluster.Tpo -c -o svaba-DiscordantCluster.obj `if test -f 'DiscordantCluster.cpp'; then $(CYGPATH_W) 'DiscordantCluster.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscordantCluster.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DiscordantCluster.Tpo $(DEPDIR)/svaba-DiscordantCluster.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiscordantCluster.cpp' object='svaba-DiscordantCluster.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DiscordantCluster.obj `if test -f 'DiscordantCluster.cpp'; then $(CYGPATH_W) 'DiscordantCluster.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscordantCluster.cpp'; fi`

svaba-DBSnpFilter.o: DBSnpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DBSnpFilter.o -MD -MP -MF $(DEPDIR)/svaba-DBSnpFilter.Tpo -c -o svaba-DBSnpFilter.o `test -f 'DBSnpFilter.cpp' || echo '$(srcdir)/'`DBSnpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DBSnpFilter.Tpo $(DEPDIR)/svaba-DBSnpFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DBSnpFilter.cpp' object='svaba-DBSnpFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DBSnpFilter.o `test -f 'DBSnpFilter.cpp' || echo '$(srcdir)/'`DBSnpFilter.cpp

svaba-DBSnpFilter.obj: DBSnpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DBSnpFilter.obj -MD -MP -MF $(DEPDIR)/svaba-DBSnpFilter.Tpo -c -o svaba-DBSnpFilter.obj `if test -f 'DBSnpFilter.cpp'; then $(CYGPATH_W) 'DBSnpFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/DBSnpFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DBSnpFilter.Tpo $(DEPDIR)/svaba-DBSnpFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DBSnpFilter.cpp' object='svaba-DBSnpFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DBSnpFilter.obj `if test -f 'DBSnpFilter.cpp'; then $(CYGPATH_W) 'DBSnpFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/DBSnpFilter.cpp'; fi`

svaba-PONFilter.o: PONFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-PONFilter.o -MD -MP -MF $(DEPDIR)/svaba-PONFilter.Tpo -c -o svaba-PONFilter.o `test -f 'PONFilter.cpp' || echo '$(srcdir)/'`PONFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-PONFilter.Tpo $(DEPDIR)/svaba-PONFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PONFilter.cpp' object='svaba-PONFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-PONFilter.o `test -f 'PONFilter.cpp' || echo '$(srcdir)/'`PONFilter.cpp

svaba-PONFilter.obj: PONFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-PONFilter.obj -MD -MP -MF $(DEPDIR)/svaba-PONFilter.Tpo -c -o svaba-PONFilter.obj `if test -f 'PONFilter.cpp'; then $(CYGPATH_W) 'PONFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/PONFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-PONFilter.Tpo $(DEPDIR)/svaba-PONFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='PONFilter.cpp' object='svaba-PONFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-PONFilter.obj `if test -f 'PONFilter.cpp'; then $(CYGPATH_W) 'PONFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/PONFilter.cpp'; fi`

svaba-svabaUtils.o: svabaUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaUtils.o -MD -MP -MF $(DEPDIR)/svaba-svabaUtils.Tpo -c -o svaba-svabaUtils.o `test -f 'svabaUtils.cpp' || echo '$(srcdir)/'`svabaUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaUtils.Tpo $(DEPDIR)/svaba-svabaUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaUtils.cpp' object='svaba-svabaUtils.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaUtils.o `test -f 'svabaUtils.cpp' || echo '$(srcdir)/'`svabaUtils.cpp

svaba-svabaUtils.obj: svabaUtils.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaUtils.obj -MD -MP -MF $(DEPDIR)/svaba-svabaUtils.Tpo -c -o svaba-svabaUtils.obj `if test -f 'svabaUtils.cpp'; then $(CYGPATH_W) 'svabaUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaUtils.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaUtils.Tpo $(DEPDIR)/svaba-svabaUtils.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaUtils.cpp' object='svaba-svabaUtils.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaUtils.obj `if test -f 'svabaUtils.cpp'; then $(CYGPATH_W) 'svabaUtils.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaUtils.cpp'; fi`

svaba-svaba.o: svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svaba.o -MD -MP -MF $(DEPDIR)/svaba-svaba.Tpo -c -o svaba-svaba.o `test -f 'svaba.cpp' || echo '$(srcdir)/'`svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svaba.Tpo $(DEPDIR)/svaba-svaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svaba.cpp' object='svaba-svaba.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svaba.o `test -f 'svaba.cpp' || echo '$(srcdir)/'`svaba.cpp

svaba-svaba.obj: svaba.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svaba.obj -MD -MP -MF $(DEPDIR)/svaba-svaba.Tpo -c -o svaba-svaba.obj `if test -f 'svaba.cpp'; then $(CYGPATH_W) 'svaba.cpp'; else $(CYGPATH_W) '$(srcdir)/svaba.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svaba.Tpo $(DEPDIR)/svaba-svaba.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svaba.cpp' object='svaba-svaba.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svaba.obj `if test -f 'svaba.cpp'; then $(CYGPATH_W) 'svaba.cpp'; else $(CYGPATH_W) '$(srcdir)/svaba.cpp'; fi`

svaba-svabaAssemblerEngine.o: svabaAssemblerEngine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaAssemblerEngine.o -MD -MP -MF $(DEPDIR)/svaba-svabaAssemblerEngine.Tpo -c -o svaba-svabaAssemblerEngine.o `test -f 'svabaAssemblerEngine.cpp' || echo '$(srcdir)/'`svabaAssemblerEngine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaAssemblerEngine.Tpo $(DEPDIR)/svaba-svabaAssemblerEngine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaAssemblerEngine.cpp' object='svaba-svabaAssemblerEngine.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaAssemblerEngine.o `test -f 'svabaAssemblerEngine.cpp' || echo '$(srcdir)/'`svabaAssemblerEngine.cpp

svaba-svabaAssemblerEngine.obj: svabaAssemblerEngine.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaAssemblerEngine.obj -MD -MP -MF $(DEPDIR)/svaba-svabaAssemblerEngine.Tpo -c -o svaba-svabaAssemblerEngine.obj `if test -f 'svabaAssemblerEngine.cpp'; then $(CYGPATH_W) 'svabaAssemblerEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaAssemblerEngine.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaAssemblerEngine.Tpo $(DEPDIR)/svaba-svabaAssemblerEngine.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaAssemblerEngine.cpp' object='svaba-svabaAssemblerEngine.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaAssemblerEngine.obj `if test -f 'svabaAssemblerEngine.cpp'; then $(CYGPATH_W) 'svabaAssemblerEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaAssemblerEngine.cpp'; fi`

svaba-vcf.o: vcf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-vcf.o -MD -MP -MF $(DEPDIR)/svaba-vcf.Tpo -c -o svaba-vcf.o `test -f 'vcf.cpp' || echo '$(srcdir)/'`vcf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-vcf.Tpo $(DEPDIR)/svaba-vcf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='vcf.cpp' object='svaba-vcf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-vcf.o `test -f 'vcf.cpp' || echo '$(srcdir)/'`vcf.cpp

svaba-vcf.obj: vcf.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-vcf.obj -MD -MP -MF $(DEPDIR)/svaba-vcf.Tpo -c -o svaba-vcf.obj `if test -f 'vcf.cpp'; then $(CYGPATH_W) 'vcf.cpp'; else $(CYGPATH_W) '$(srcdir)/vcf.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-vcf.Tpo $(DEPDIR)/svaba-vcf.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='vcf.cpp' object='svaba-vcf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-vcf.obj `if test -f 'vcf.cpp'; then $(CYGPATH_W) 'vcf.cpp'; else $(CYGPATH_W) '$(srcdir)/vcf.cpp'; fi`

svaba-DiscordantRealigner.o: DiscordantRealigner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DiscordantRealigner.o -MD -MP -MF $(DEPDIR)/svaba-DiscordantRealigner.Tpo -c -o svaba-DiscordantRealigner.o `test -f 'DiscordantRealigner.cpp' || echo '$(srcdir)/'`DiscordantRealigner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DiscordantRealigner.Tpo $(DEPDIR)/svaba-DiscordantRealigner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiscordantRealigner.cpp' object='svaba-DiscordantRealigner.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DiscordantRealigner.o `test -f 'DiscordantRealigner.cpp' || echo '$(srcdir)/'`DiscordantRealigner.cpp

svaba-DiscordantRealigner.obj: DiscordantRealigner.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-DiscordantRealigner.obj -MD -MP -MF $(DEPDIR)/svaba-DiscordantRealigner.Tpo -c -o svaba-DiscordantRealigner.obj `if test -f 'DiscordantRealigner.cpp'; then $(CYGPATH_W) 'DiscordantRealigner.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscordantRealigner.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-DiscordantRealigner.Tpo $(DEPDIR)/svaba-DiscordantRealigner.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='DiscordantRealigner.cpp' object='svaba-DiscordantRealigner.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-DiscordantRealigner.obj `if test -f 'DiscordantRealigner.cpp'; then $(CYGPATH_W) 'DiscordantRealigner.cpp'; else $(CYGPATH_W) '$(srcdir)/DiscordantRealigner.cpp'; fi`

svaba-svabaOverlapAlgorithm.o: svabaOverlapAlgorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaOverlapAlgorithm.o -MD -MP -MF $(DEPDIR)/svaba-svabaOverlapAlgorithm.Tpo -c -o svaba-svabaOverlapAlgorithm.o `test -f 'svabaOverlapAlgorithm.cpp' || echo '$(srcdir)/'`svabaOverlapAlgorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaOverlapAlgorithm.Tpo $(DEPDIR)/svaba-svabaOverlapAlgorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaOverlapAlgorithm.cpp' object='svaba-svabaOverlapAlgorithm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaOverlapAlgorithm.o `test -f 'svabaOverlapAlgorithm.cpp' || echo '$(srcdir)/'`svabaOverlapAlgorithm.cpp

svaba-svabaOverlapAlgorithm.obj: svabaOverlapAlgorithm.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaOverlapAlgorithm.obj -MD -MP -MF $(DEPDIR)/svaba-svabaOverlapAlgorithm.Tpo -c -o svaba-svabaOverlapAlgorithm.obj `if test -f 'svabaOverlapAlgorithm.cpp'; then $(CYGPATH_W) 'svabaOverlapAlgorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaOverlapAlgorithm.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaOverlapAlgorithm.Tpo $(DEPDIR)/svaba-svabaOverlapAlgorithm.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaOverlapAlgorithm.cpp' object='svaba-svabaOverlapAlgorithm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaOverlapAlgorithm.obj `if test -f 'svabaOverlapAlgorithm.cpp'; then $(CYGPATH_W) 'svabaOverlapAlgorithm.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaOverlapAlgorithm.cpp'; fi`

svaba-svabaASQG.o: svabaASQG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaASQG.o -MD -MP -MF $(DEPDIR)/svaba-svabaASQG.Tpo -c -o svaba-svabaASQG.o `test -f 'svabaASQG.cpp' || echo '$(srcdir)/'`svabaASQG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaASQG.Tpo $(DEPDIR)/svaba-svabaASQG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaASQG.cpp' object='svaba-svabaASQG.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaASQG.o `test -f 'svabaASQG.cpp' || echo '$(srcdir)/'`svabaASQG.cpp

svaba-svabaASQG.obj: svabaASQG.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaASQG.obj -MD -MP -MF $(DEPDIR)/svaba-svabaASQG.Tpo -c -o svaba-svabaASQG.obj `if test -f 'svabaASQG.cpp'; then $(CYGPATH_W) 'svabaASQG.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaASQG.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaASQG.Tpo $(DEPDIR)/svaba-svabaASQG.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaASQG.cpp' object='svaba-svabaASQG.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaASQG.obj `if test -f 'svabaASQG.cpp'; then $(CYGPATH_W) 'svabaASQG.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaASQG.cpp'; fi`

svaba-svabaAssemble.o: svabaAssemble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaAssemble.o -MD -MP -MF $(DEPDIR)/svaba-svabaAssemble.Tpo -c -o svaba-svabaAssemble.o `test -f 'svabaAssemble.cpp' || echo '$(srcdir)/'`svabaAssemble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaAssemble.Tpo $(DEPDIR)/svaba-svabaAssemble.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaAssemble.cpp' object='svaba-svabaAssemble.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaAssemble.o `test -f 'svabaAssemble.cpp' || echo '$(srcdir)/'`svabaAssemble.cpp

svaba-svabaAssemble.obj: svabaAssemble.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaAssemble.obj -MD -MP -MF $(DEPDIR)/svaba-svabaAssemble.Tpo -c -o svaba-svabaAssemble.obj `if test -f 'svabaAssemble.cpp'; then $(CYGPATH_W) 'svabaAssemble.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaAssemble.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaAssemble.Tpo $(DEPDIR)/svaba-svabaAssemble.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaAssemble.cpp' object='svaba-svabaAssemble.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaAssemble.obj `if test -f 'svabaAssemble.cpp'; then $(CYGPATH_W) 'svabaAssemble.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaAssemble.cpp'; fi`

svaba-KmerFilter.o: KmerFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-KmerFilter.o -MD -MP -MF $(DEPDIR)/svaba-KmerFilter.Tpo -c -o svaba-KmerFilter.o `test -f 'KmerFilter.cpp' || echo '$(srcdir)/'`KmerFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-KmerFilter.Tpo $(DEPDIR)/svaba-KmerFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='KmerFilter.cpp' object='svaba-KmerFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-KmerFilter.o `test -f 'KmerFilter.cpp' || echo '$(srcdir)/'`KmerFilter.cpp

svaba-KmerFilter.obj: KmerFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-KmerFilter.obj -MD -MP -MF $(DEPDIR)/svaba-KmerFilter.Tpo -c -o svaba-KmerFilter.obj `if test -f 'KmerFilter.cpp'; then $(CYGPATH_W) 'KmerFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/KmerFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-KmerFilter.Tpo $(DEPDIR)/svaba-KmerFilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='KmerFilter.cpp' object='svaba-KmerFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-KmerFilter.obj `if test -f 'KmerFilter.cpp'; then $(CYGPATH_W) 'KmerFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/KmerFilter.cpp'; fi`

svaba-svabaBamWalker.o: svabaBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaBamWalker.o -MD -MP -MF $(DEPDIR)/svaba-svabaBamWalker.Tpo -c -o svaba-svabaBamWalker.o `test -f 'svabaBamWalker.cpp' || echo '$(srcdir)/'`svabaBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaBamWalker.Tpo $(DEPDIR)/svaba-svabaBamWalker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaBamWalker.cpp' object='svaba-svabaBamWalker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaBamWalker.o `test -f 'svabaBamWalker.cpp' || echo '$(srcdir)/'`svabaBamWalker.cpp

svaba-svabaBamWalker.obj: svabaBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaBamWalker.obj -MD -MP -MF $(DEPDIR)/svaba-svabaBamWalker.Tpo -c -o svaba-svabaBamWalker.obj `if test -f 'svabaBamWalker.cpp'; then $(CYGPATH_W) 'svabaBamWalker.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaBamWalker.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaBamWalker.Tpo $(DEPDIR)/svaba-svabaBamWalker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaBamWalker.cpp' object='svaba-svabaBamWalker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaBamWalker.obj `if test -f 'svabaBamWalker.cpp'; then $(CYGPATH_W) 'svabaBamWalker.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaBamWalker.cpp'; fi`

svaba-refilter.o: refilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-refilter.o -MD -MP -MF $(DEPDIR)/svaba-refilter.Tpo -c -o svaba-refilter.o `test -f 'refilter.cpp' || echo '$(srcdir)/'`refilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-refilter.Tpo $(DEPDIR)/svaba-refilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='refilter.cpp' object='svaba-refilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-refilter.o `test -f 'refilter.cpp' || echo '$(srcdir)/'`refilter.cpp

svaba-refilter.obj: refilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-refilter.obj -MD -MP -MF $(DEPDIR)/svaba-refilter.Tpo -c -o svaba-refilter.obj `if test -f 'refilter.cpp'; then $(CYGPATH_W) 'refilter.cpp'; else $(CYGPATH_W) '$(srcdir)/refilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-refilter.Tpo $(DEPDIR)/svaba-refilter.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='refilter.cpp' object='svaba-refilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-refilter.obj `if test -f 'refilter.cpp'; then $(CYGPATH_W) 'refilter.cpp'; else $(CYGPATH_W) '$(srcdir)/refilter.cpp'; fi`

svaba-LearnBamParams.o: LearnBamParams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-LearnBamParams.o -MD -MP -MF $(DEPDIR)/svaba-LearnBamParams.Tpo -c -o svaba-LearnBamParams.o `test -f 'LearnBamParams.cpp' || echo '$(srcdir)/'`LearnBamParams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-LearnBamParams.Tpo $(DEPDIR)/svaba-LearnBamParams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LearnBamParams.cpp' object='svaba-LearnBamParams.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-LearnBamParams.o `test -f 'LearnBamParams.cpp' || echo '$(srcdir)/'`LearnBamParams.cpp

svaba-LearnBamParams.obj: LearnBamParams.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-LearnBamParams.obj -MD -MP -MF $(DEPDIR)/svaba-LearnBamParams.Tpo -c -o svaba-LearnBamParams.obj `if test -f 'LearnBamParams.cpp'; then $(CYGPATH_W) 'LearnBamParams.cpp'; else $(CYGPATH_W) '$(srcdir)/LearnBamParams.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-LearnBamParams.Tpo $(DEPDIR)/svaba-LearnBamParams.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='LearnBamParams.cpp' object='svaba-LearnBamParams.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-LearnBamParams.obj `if test -f 'LearnBamParams.cpp'; then $(CYGPATH_W) 'LearnBamParams.cpp'; else $(CYGPATH_W) '$(srcdir)/LearnBamParams.cpp'; fi`

svaba-STCoverage.o: STCoverage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-STCoverage.o -MD -MP -MF $(DEPDIR)/svaba-STCoverage.Tpo -c -o svaba-STCoverage.o `test -f 'STCoverage.cpp' || echo '$(srcdir)/'`STCoverage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-STCoverage.Tpo $(DEPDIR)/svaba-STCoverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='STCoverage.cpp' object='svaba-STCoverage.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-STCoverage.o `test -f 'STCoverage.cpp' || echo '$(srcdir)/'`STCoverage.cpp

svaba-STCoverage.obj: STCoverage.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-STCoverage.obj -MD -MP -MF $(DEPDIR)/svaba-STCoverage.Tpo -c -o svaba-STCoverage.obj `if test -f 'STCoverage.cpp'; then $(CYGPATH_W) 'STCoverage.cpp'; else $(CYGPATH_W) '$(srcdir)/STCoverage.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-STCoverage.Tpo $(DEPDIR)/svaba-STCoverage.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='STCoverage.cpp' object='svaba-STCoverage.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-STCoverage.obj `if test -f 'STCoverage.cpp'; then $(CYGPATH_W) 'STCoverage.cpp'; else $(CYGPATH_W) '$(srcdir)/STCoverage.cpp'; fi`

svaba-Histogram.o: Histogram.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-Histogram.o -MD -MP -MF $(DEPDIR)/svaba-Histogram.Tpo -c -o svaba-Histogram.o `test -f 'Histogram.cpp' || echo '$(srcdir)/'`Histogram.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-Histogram.Tpo $(DEPDIR)/svaba-Histogram.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Histogram.cpp' object='svaba-Histogram.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-Histogram.o `test -f 'Histogram.cpp' || echo '$(srcdir)/'`Histogram.cpp

svaba-Histogram.obj: Histogram.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-Histogram.obj -MD -MP -MF $(DEPDIR)/svaba-Histogram.Tpo -c -o svaba-Histogram.obj `if test -f 'Histogram.cpp'; then $(CYGPATH_W) 'Histogram.cpp'; else $(CYGPATH_W) '$(srcdir)/Histogram.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-Histogram.Tpo $(DEPDIR)/svaba-Histogram.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='Histogram.cpp' object='svaba-Histogram.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-Histogram.obj `if test -f 'Histogram.cpp'; then $(CYGPATH_W) 'Histogram.cpp'; else $(CYGPATH_W) '$(srcdir)/Histogram.cpp'; fi`

svaba-BamStats.o: BamStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-BamStats.o -MD -MP -MF $(DEPDIR)/svaba-BamStats.Tpo -c -o svaba-BamStats.o `test -f 'BamStats.cpp' || echo '$(srcdir)/'`BamStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-BamStats.Tpo $(DEPDIR)/svaba-BamStats.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BamStats.cpp' object='svaba-BamStats.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-BamStats.o `test -f 'BamStats.cpp' || echo '$(srcdir)/'`BamStats.cpp

svaba-BamStats.obj: BamStats.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-BamStats.obj -MD -MP -MF $(DEPDIR)/svaba-BamStats.Tpo -c -o svaba-BamStats.obj `if test -f 'BamStats.cpp'; then $(CYGPATH_W) 'BamStats.cpp'; else $(CYGPATH_W) '$(srcdir)/BamStats.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-BamStats.Tpo $(DEPDIR)/svaba-BamStats.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='BamStats.cpp' object='svaba-BamStats.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-BamStats.obj `if test -f 'BamStats.cpp'; then $(CYGPATH_W) 'BamStats.cpp'; else $(CYGPATH_W) '$(srcdir)/BamStats.cpp'; fi`

svaba-svabaRead.o: svabaRead.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaRead.o -MD -MP -MF $(DEPDIR)/svaba-svabaRead.Tpo -c -o svaba-svabaRead.o `test -f 'svabaRead.cpp' || echo '$(srcdir)/'`svabaRead.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaRead.Tpo $(DEPDIR)/svaba-svabaRead.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaRead.cpp' object='svaba-svabaRead.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaRead.o `test -f 'svabaRead.cpp' || echo '$(srcdir)/'`svabaRead.cpp

svaba-svabaRead.obj: svabaRead.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaRead.obj -MD -MP -MF $(DEPDIR)/svaba-svabaRead.Tpo -c -o svaba-svabaRead.obj `if test -f 'svabaRead.cpp'; then $(CYGPATH_W) 'svabaRead.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaRead.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaRead.Tpo $(DEPDIR)/svaba-svabaRead.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaRead.cpp' object='svaba-svabaRead.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaRead.obj `if test -f 'svabaRead.cpp'; then $(CYGPATH_W) 'svabaRead.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaRead.cpp'; fi`

svaba-svabaBxBamWalker.o: svabaBxBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaBxBamWalker.o -MD -MP -MF $(DEPDIR)/svaba-svabaBxBamWalker.Tpo -c -o svaba-svabaBxBamWalker.o `test -f 'svabaBxBamWalker.cpp' || echo '$(srcdir)/'`svabaBxBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaBxBamWalker.Tpo $(DEPDIR)/svaba-svabaBxBamWalker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaBxBamWalker.cpp' object='svaba-svabaBxBamWalker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaBxBamWalker.o `test -f 'svabaBxBamWalker.cpp' || echo '$(srcdir)/'`svabaBxBamWalker.cpp

svaba-svabaBxBamWalker.obj: svabaBxBamWalker.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svaba-svabaBxBamWalker.obj -MD -MP -MF $(DEPDIR)/svaba-svabaBxBamWalker.Tpo -c -o svaba-svabaBxBamWalker.obj `if test -f 'svabaBxBamWalker.cpp'; then $(CYGPATH_W) 'svabaBxBamWalker.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaBxBamWalker.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/svaba-svabaBxBamWalker.Tpo $(DEPDIR)/svaba-svabaBxBamWalker.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='svabaBxBamWalker.cpp' object='svaba-svabaBxBamWalker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(svaba_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svaba-svabaBxBamWalker.obj `if test -f 'svabaBxBamWalker.cpp'; then $(CYGPATH_W) 'svabaBxBamWalker.cpp'; else $(CYGPATH_W) '$(srcdir)/svabaBxBamWalker.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/svaba-AlignedContig.Po
	-rm -f ./$(DEPDIR)/svaba-AlignmentFragment.Po
	-rm -f ./$(DEPDIR)/svaba-BamStats.Po
	-rm -f ./$(DEPDIR)/svaba-BreakPoint.Po
	-rm -f ./$(DEPDIR)/svaba-DBSnpFilter.Po
	-rm -f ./$(DEPDIR)/svaba-DiscordantCluster.Po
	-rm -f ./$(DEPDIR)/svaba-DiscordantRealigner.Po
	-rm -f ./$(DEPDIR)/svaba-Histogram.Po
	-rm -f ./$(DEPDIR)/svaba-KmerFilter.Po
	-rm -f ./$(DEPDIR)/svaba-LearnBamParams.Po
	-rm -f ./$(DEPDIR)/svaba-PONFilter.Po
	-rm -f ./$(DEPDIR)/svaba-STCoverage.Po
	-rm -f ./$(DEPDIR)/svaba-refilter.Po
	-rm -f ./$(DEPDIR)/svaba-run_svaba.Po
	-rm -f ./$(DEPDIR)/svaba-svaba.Po
	-rm -f ./$(DEPDIR)/svaba-svabaASQG.Po
	-rm -f ./$(DEPDIR)/svaba-svabaAssemble.Po
	-rm -f ./$(DEPDIR)/svaba-svabaAssemblerEngine.Po
	-rm -f ./$(DEPDIR)/svaba-svabaBamWalker.Po
	-rm -f ./$(DEPDIR)/svaba-svabaBxBamWalker.Po
	-rm -f ./$(DEPDIR)/svaba-svabaOverlapAlgorithm.Po
	-rm -f ./$(DEPDIR)/svaba-svabaRead.Po
	-rm -f ./$(DEPDIR)/svaba-svabaUtils.Po
	-rm -f ./$(DEPDIR)/svaba-vcf.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/svaba-AlignedContig.Po
	-rm -f ./$(DEPDIR)/svaba-AlignmentFragment.Po
	-rm -f ./$(DEPDIR)/svaba-BamStats.Po
	-rm -f ./$(DEPDIR)/svaba-BreakPoint.Po
	-rm -f ./$(DEPDIR)/svaba-DBSnpFilter.Po
	-rm -f ./$(DEPDIR)/svaba-DiscordantCluster.Po
	-rm -f ./$(DEPDIR)/svaba-DiscordantRealigner.Po
	-rm -f ./$(DEPDIR)/svaba-Histogram.Po
	-rm -f ./$(DEPDIR)/svaba-KmerFilter.Po
	-rm -f ./$(DEPDIR)/svaba-LearnBamParams.Po
	-rm -f ./$(DEPDIR)/svaba-PONFilter.Po
	-rm -f ./$(DEPDIR)/svaba-STCoverage.Po
	-rm -f ./$(DEPDIR)/svaba-refilter.Po
	-rm -f ./$(DEPDIR)/svaba-run_svaba.Po
	-rm -f ./$(DEPDIR)/svaba-svaba.Po
	-rm -f ./$(DEPDIR)/svaba-svabaASQG.Po
	-rm -f ./$(DEPDIR)/svaba-svabaAssemble.Po
	-rm -f ./$(DEPDIR)/svaba-svabaAssemblerEngine.Po
	-rm -f ./$(DEPDIR)/svaba-svabaBamWalker.Po
	-rm -f ./$(DEPDIR)/svaba-svabaBxBamWalker.Po
	-rm -f ./$(DEPDIR)/svaba-svabaOverlapAlgorithm.Po
	-rm -f ./$(DEPDIR)/svaba-svabaRead.Po
	-rm -f ./$(DEPDIR)/svaba-svabaUtils.Po
	-rm -f ./$(DEPDIR)/svaba-vcf.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-binPROGRAMS install-data install-data-am \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# svaba_SOURCES = testBxBamWalker.cpp BreakPoint.cpp AlignedContig.cpp AlignmentFragment.cpp \
# 			DiscordantCluster.cpp DBSnpFilter.cpp PONFilter.cpp \
# 	 		svabaUtils.cpp svabaAssemblerEngine.cpp vcf.cpp \
# 	 		DiscordantRealigner.cpp svabaOverlapAlgorithm.cpp svabaASQG.cpp \
# 	 		svabaAssemble.cpp KmerFilter.cpp svabaBamWalker.cpp \
# 	 		refilter.cpp LearnBamParams.cpp \
# 	 		STCoverage.cpp Histogram.cpp BamStats.cpp svabaRead.cpp \
# 	 		svabaBxBamWalker.cpp
install:
	mkdir -p ../../bin && mv svaba ../../bin

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
